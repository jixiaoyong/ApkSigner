name: Publish PreRelease

permissions:
  contents: write

on:
  push:
    branches:
      - prerelease

jobs:
  mac_build:
    runs-on: macos-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v2
        with:
          ref: prerelease

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: 17

      - name: Gradle Build Action
        uses: gradle/gradle-build-action@v2.7.1

      - name: Execute Gradle build
        run: |
          ./gradlew packageReleaseDistributionForCurrentOS
      - name: Upload mac os artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos-artifact
          path: build/compose/binaries/main-release/dmg/*.dmg

  windows_build:
    runs-on: windows-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v2
        with:
          ref: prerelease

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: 17

      - name: Gradle Build Action
        uses: gradle/gradle-build-action@v2.7.1

      - name: Execute Gradle build
        run: ./gradlew packageReleaseDistributionForCurrentOS
      - name: Upload windows artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-artifact
          path: build/compose/binaries/main-release/msi/*.msi

  ubuntu_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v2
        with:
          ref: prerelease

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: 17

      - name: Gradle Build Action
        uses: gradle/gradle-build-action@v2.7.1

      - name: Execute Gradle build
        run: ./gradlew packageReleaseDistributionForCurrentOS
      - name: Upload ubuntu artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ubuntu-artifact
          path: build/compose/binaries/main-release/deb/*.deb

  publisher:
    name: Publish artifacts to github release
    needs: [ mac_build, windows_build, ubuntu_build ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v2
        with:
          ref: prerelease

      - name: Get Prerelease Version
        id: get_version
        run: |
          VERSION=$(awk -F'"' '/packageVersion =/ {print $2}' build.gradle.kts)
          DATE=$(date +%Y%m%d%H%M%S)
          echo "version=v$VERSION-$DATE-alpha" >> "$GITHUB_OUTPUT"

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: dist

      - name: Auto Changelog
        uses: ardalanamini/auto-changelog@v4.0.0
        id: changelog
        with:
          release-name: ${{ steps.get_version.outputs.version }}
          mention-authors: false

      - name: Publish Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >-
          gh release create ${{ steps.get_version.outputs.version }}
          ./dist/*/*
          --target prerelease
          --notes $'**【警告⚠️WARNING】**\n\n这个是开发版本，一般与prerelease分支代码保持同步，仅用于修复验证BUG、体验最新功能。\n日常使用请使用其他release版本。\n\n${{ steps.changelog.outputs.changelog }}'
          --title "ApkSigner ${{ steps.get_version.outputs.version }}"
          --prerelease